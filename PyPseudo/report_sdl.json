{"created": 1731334275.539284, "duration": 14.726721048355103, "exitcode": 2, "root": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo", "environment": {}, "summary": {"passed": 3, "failed": 2, "total": 5, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add", "type": "Function", "lineno": 16}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide", "type": "Function", "lineno": 42}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "type": "Function", "lineno": 54}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "type": "Function", "lineno": 58}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "type": "Function", "lineno": 70}, {"nodeid": "simplePro/test_calculator.py::test_power", "type": "Function", "lineno": 74}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "type": "Function", "lineno": 84}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "type": "Function", "lineno": 93}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "type": "Function", "lineno": 97}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add", "lineno": 16, "outcome": "passed", "keywords": ["test_add", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0012702079984592274, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['for']\n  - Type: sdl, Target: ['if']\n"}, "call": {"duration": 0.0006112500013841782, "outcome": "passed"}, "teardown": {"duration": 0.0005851669993717223, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008583749986428302, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['for']\n  - Type: sdl, Target: ['if']\n"}, "call": {"duration": 0.0005199170009291265, "outcome": "passed"}, "teardown": {"duration": 0.00047970900050131604, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.000808624998171581, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['for']\n  - Type: sdl, Target: ['if']\n"}, "call": {"duration": 0.001126582999859238, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 35, "message": "assert 0 == 9\n +  where 0 = <bound method Calculator.multiply of <calculator.Calculator object at 0x104cad350>>(3, 3)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x104cad350>> = <calculator.Calculator object at 0x104cad350>.multiply"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 35, "message": "AssertionError"}], "stdout": "SDL: Skipping for loop\nSDL: Skipping if statement\n", "longrepr": "calculator = <calculator.Calculator object at 0x104cad350>\n\n    def test_multiply(calculator):\n>       assert calculator.multiply(3, 3) == 9\nE       assert 0 == 9\nE        +  where 0 = <bound method Calculator.multiply of <calculator.Calculator object at 0x104cad350>>(3, 3)\nE        +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x104cad350>> = <calculator.Calculator object at 0x104cad350>.multiply\n\nsimplePro/test_calculator.py:35: AssertionError"}, "teardown": {"duration": 0.0005666249999194406, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide", "lineno": 42, "outcome": "failed", "keywords": ["test_divide", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0009187499999825377, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['for']\n  - Type: sdl, Target: ['if']\n"}, "call": {"duration": 0.001171875002910383, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 47, "message": "assert 5 == -5\n +  where 5 = <bound method Calculator.divide of <calculator.Calculator object at 0x104ce0150>>(-10, 2)\n +    where <bound method Calculator.divide of <calculator.Calculator object at 0x104ce0150>> = <calculator.Calculator object at 0x104ce0150>.divide"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 47, "message": "AssertionError"}], "stdout": "SDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\n", "longrepr": "calculator = <calculator.Calculator object at 0x104ce0150>\n\n    def test_divide(calculator):\n        assert calculator.divide(10, 2) == 5\n        assert calculator.divide(9, 3) == 3\n        assert calculator.divide(5, 1) == 5\n>       assert calculator.divide(-10, 2) == -5\nE       assert 5 == -5\nE        +  where 5 = <bound method Calculator.divide of <calculator.Calculator object at 0x104ce0150>>(-10, 2)\nE        +    where <bound method Calculator.divide of <calculator.Calculator object at 0x104ce0150>> = <calculator.Calculator object at 0x104ce0150>.divide\n\nsimplePro/test_calculator.py:47: AssertionError"}, "teardown": {"duration": 0.0005299999975250103, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "lineno": 54, "outcome": "passed", "keywords": ["test_divide_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008670829993207008, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['for']\n  - Type: sdl, Target: ['if']\n"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}