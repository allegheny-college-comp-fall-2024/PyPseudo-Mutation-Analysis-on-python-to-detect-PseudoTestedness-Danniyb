{"created": 1731337001.926031, "duration": 0.15110015869140625, "exitcode": 1, "root": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo", "environment": {}, "summary": {"passed": 10, "failed": 1, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add", "type": "Function", "lineno": 16}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide", "type": "Function", "lineno": 42}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "type": "Function", "lineno": 54}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "type": "Function", "lineno": 58}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "type": "Function", "lineno": 70}, {"nodeid": "simplePro/test_calculator.py::test_power", "type": "Function", "lineno": 74}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "type": "Function", "lineno": 84}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "type": "Function", "lineno": 93}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "type": "Function", "lineno": 97}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add", "lineno": 16, "outcome": "passed", "keywords": ["test_add", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.001173667002149159, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0006227909980225377, "outcome": "passed"}, "teardown": {"duration": 0.0005636669993691612, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008032500008994248, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0005218750011408702, "outcome": "passed"}, "teardown": {"duration": 0.0004690000023401808, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "lineno": 33, "outcome": "passed", "keywords": ["test_multiply", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0007916249996924307, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0007505829998990521, "outcome": "passed"}, "teardown": {"duration": 0.0004701249999925494, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide", "lineno": 42, "outcome": "passed", "keywords": ["test_divide", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0007863750033720862, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0011731669983419124, "outcome": "passed"}, "teardown": {"duration": 0.00045795900223311037, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "lineno": 54, "outcome": "passed", "keywords": ["test_divide_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0007714999992458615, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0010540000002947636, "outcome": "passed"}, "teardown": {"duration": 0.0004928330017719418, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "lineno": 58, "outcome": "failed", "keywords": ["test_modulus", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0009713750005175825, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0013378339972405229, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 63, "message": "assert 1 == -1\n +  where 1 = <bound method Calculator.modulus of <calculator.Calculator object at 0x10657f9d0>>(-10, 3)\n +    where <bound method Calculator.modulus of <calculator.Calculator object at 0x10657f9d0>> = <calculator.Calculator object at 0x10657f9d0>.modulus"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 63, "message": "AssertionError"}], "stdout": "SDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\n", "longrepr": "calculator = <calculator.Calculator object at 0x10657f9d0>\n\n    def test_modulus(calculator):\n        assert calculator.modulus(10, 3) == 1\n        assert calculator.modulus(9, 4) == 1\n        assert calculator.modulus(5, 5) == 0\n>       assert calculator.modulus(-10, 3) == -1\nE       assert 1 == -1\nE        +  where 1 = <bound method Calculator.modulus of <calculator.Calculator object at 0x10657f9d0>>(-10, 3)\nE        +    where <bound method Calculator.modulus of <calculator.Calculator object at 0x10657f9d0>> = <calculator.Calculator object at 0x10657f9d0>.modulus\n\nsimplePro/test_calculator.py:63: AssertionError"}, "teardown": {"duration": 0.0005888330015295651, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "lineno": 70, "outcome": "passed", "keywords": ["test_modulus_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.000983791000180645, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0005399159999797121, "outcome": "passed"}, "teardown": {"duration": 0.0004790410021087155, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_power", "lineno": 74, "outcome": "passed", "keywords": ["test_power", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008304580005642492, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.000940166999498615, "outcome": "passed"}, "teardown": {"duration": 0.00046858399946358986, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "lineno": 84, "outcome": "passed", "keywords": ["test_square_root", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008097499994619284, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0008895829996617977, "outcome": "passed"}, "teardown": {"duration": 0.0004889169977104757, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "lineno": 93, "outcome": "passed", "keywords": ["test_square_root_of_negative", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008327079995069653, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0012212919973535463, "outcome": "passed"}, "teardown": {"duration": 0.00046033299804548733, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "lineno": 97, "outcome": "passed", "keywords": ["test_square_root_non_converging", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0007909579981060233, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_5']\n"}, "call": {"duration": 0.0010281249997206032, "outcome": "passed"}, "teardown": {"duration": 0.0004820829999516718, "outcome": "passed"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}