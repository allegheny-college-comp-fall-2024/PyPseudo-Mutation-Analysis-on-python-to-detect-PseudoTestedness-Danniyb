{"created": 1733248822.1817942, "duration": 0.11382722854614258, "exitcode": 1, "root": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo", "environment": {}, "summary": {"passed": 9, "failed": 2, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add", "type": "Function", "lineno": 16}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide", "type": "Function", "lineno": 42}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "type": "Function", "lineno": 54}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "type": "Function", "lineno": 58}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "type": "Function", "lineno": 70}, {"nodeid": "simplePro/test_calculator.py::test_power", "type": "Function", "lineno": 74}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "type": "Function", "lineno": 84}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "type": "Function", "lineno": 93}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "type": "Function", "lineno": 97}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add", "lineno": 16, "outcome": "passed", "keywords": ["test_add", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008920829859562218, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.0004083749954588711, "outcome": "passed"}, "teardown": {"duration": 0.0003560830373317003, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005502079729922116, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.00035512499744072556, "outcome": "passed"}, "teardown": {"duration": 0.00035520800156518817, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.000538916967343539, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.000878125021699816, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 39, "message": "assert -9 == 9\n +  where -9 = <bound method Calculator.multiply of <calculator.Calculator object at 0x104680910>>(-3, -3)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x104680910>> = <calculator.Calculator object at 0x104680910>.multiply"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 39, "message": "AssertionError"}], "stdout": "SDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\n", "longrepr": "calculator = <calculator.Calculator object at 0x104680910>\n\n    def test_multiply(calculator):\n        assert calculator.multiply(3, 3) == 9\n        assert calculator.multiply(2, 5) == 10\n        assert calculator.multiply(10, 0) == 0\n        assert calculator.multiply(-2, 4) == -8\n>       assert calculator.multiply(-3, -3) == 9\nE       assert -9 == 9\nE        +  where -9 = <bound method Calculator.multiply of <calculator.Calculator object at 0x104680910>>(-3, -3)\nE        +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x104680910>> = <calculator.Calculator object at 0x104680910>.multiply\n\nsimplePro/test_calculator.py:39: AssertionError"}, "teardown": {"duration": 0.00045429100282490253, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide", "lineno": 42, "outcome": "passed", "keywords": ["test_divide", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005850829766131938, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.0008080420084297657, "outcome": "passed"}, "teardown": {"duration": 0.00033004197757691145, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "lineno": 54, "outcome": "passed", "keywords": ["test_divide_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005219999584369361, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.0007483749650418758, "outcome": "passed"}, "teardown": {"duration": 0.0003394579980522394, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "lineno": 58, "outcome": "passed", "keywords": ["test_modulus", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005785420071333647, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.0006796669913455844, "outcome": "passed"}, "teardown": {"duration": 0.000335165997967124, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "lineno": 70, "outcome": "passed", "keywords": ["test_modulus_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005397920031100512, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.0003664999967440963, "outcome": "passed"}, "teardown": {"duration": 0.0003422500449232757, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_power", "lineno": 74, "outcome": "failed", "keywords": ["test_power", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005435000057332218, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.0007899579941295087, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 78, "message": "assert 8 == -8\n +  where 8 = <bound method Calculator.power of <calculator.Calculator object at 0x1046bd310>>(-2, 3)\n +    where <bound method Calculator.power of <calculator.Calculator object at 0x1046bd310>> = <calculator.Calculator object at 0x1046bd310>.power"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 78, "message": "AssertionError"}], "stdout": "SDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\n", "longrepr": "calculator = <calculator.Calculator object at 0x1046bd310>\n\n    def test_power(calculator):\n        assert calculator.power(2, 3) == 8\n        assert calculator.power(5, 0) == 1\n>       assert calculator.power(-2, 3) == -8\nE       assert 8 == -8\nE        +  where 8 = <bound method Calculator.power of <calculator.Calculator object at 0x1046bd310>>(-2, 3)\nE        +    where <bound method Calculator.power of <calculator.Calculator object at 0x1046bd310>> = <calculator.Calculator object at 0x1046bd310>.power\n\nsimplePro/test_calculator.py:78: AssertionError"}, "teardown": {"duration": 0.00036100001307204366, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "lineno": 84, "outcome": "passed", "keywords": ["test_square_root", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005940829869359732, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.000656957970932126, "outcome": "passed"}, "teardown": {"duration": 0.00031704100547358394, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "lineno": 93, "outcome": "passed", "keywords": ["test_square_root_of_negative", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0006547499797306955, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.0008565839962102473, "outcome": "passed"}, "teardown": {"duration": 0.00030262500513345003, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "lineno": 97, "outcome": "passed", "keywords": ["test_square_root_non_converging", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005707500386051834, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_1']\n"}, "call": {"duration": 0.000699249969329685, "outcome": "passed"}, "teardown": {"duration": 0.00033604202326387167, "outcome": "passed"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}