{"created": 1730121449.635726, "duration": 0.181563138961792, "exitcode": 1, "root": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo", "environment": {}, "summary": {"failed": 11, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add", "type": "Function", "lineno": 16}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide", "type": "Function", "lineno": 42}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "type": "Function", "lineno": 54}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "type": "Function", "lineno": 58}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "type": "Function", "lineno": 70}, {"nodeid": "simplePro/test_calculator.py::test_power", "type": "Function", "lineno": 74}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "type": "Function", "lineno": 84}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "type": "Function", "lineno": 93}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "type": "Function", "lineno": 97}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add", "lineno": 16, "outcome": "failed", "keywords": ["test_add", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0006853750091977417, "outcome": "passed"}, "call": {"duration": 0.0007826660003047436, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 18, "message": "assert None == 3\n +  where None = <bound method Calculator.add of <calculator.Calculator object at 0x1062ca290>>(1, 2)\n +    where <bound method Calculator.add of <calculator.Calculator object at 0x1062ca290>> = <calculator.Calculator object at 0x1062ca290>.add"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 18, "message": "AssertionError"}], "stdout": "XMT: Removing body of function add\n", "longrepr": "calculator = <calculator.Calculator object at 0x1062ca290>\n\n    def test_add(calculator):\n>       assert calculator.add(1, 2) == 3\nE       assert None == 3\nE        +  where None = <bound method Calculator.add of <calculator.Calculator object at 0x1062ca290>>(1, 2)\nE        +    where <bound method Calculator.add of <calculator.Calculator object at 0x1062ca290>> = <calculator.Calculator object at 0x1062ca290>.add\n\nsimplePro/test_calculator.py:18: AssertionError"}, "teardown": {"duration": 0.00040362501749768853, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "lineno": 25, "outcome": "failed", "keywords": ["test_subtract", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005340419884305447, "outcome": "passed"}, "call": {"duration": 0.0005715419829357415, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 27, "message": "assert None == 2\n +  where None = <bound method Calculator.subtract of <calculator.Calculator object at 0x106301050>>(5, 3)\n +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x106301050>> = <calculator.Calculator object at 0x106301050>.subtract"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 27, "message": "AssertionError"}], "stdout": "XMT: Removing body of function subtract\n", "longrepr": "calculator = <calculator.Calculator object at 0x106301050>\n\n    def test_subtract(calculator):\n>       assert calculator.subtract(5, 3) == 2\nE       assert None == 2\nE        +  where None = <bound method Calculator.subtract of <calculator.Calculator object at 0x106301050>>(5, 3)\nE        +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x106301050>> = <calculator.Calculator object at 0x106301050>.subtract\n\nsimplePro/test_calculator.py:27: AssertionError"}, "teardown": {"duration": 0.0003195420140400529, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005503749998752028, "outcome": "passed"}, "call": {"duration": 0.0006102500192355365, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 35, "message": "assert None == 9\n +  where None = <bound method Calculator.multiply of <calculator.Calculator object at 0x1062c8210>>(3, 3)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x1062c8210>> = <calculator.Calculator object at 0x1062c8210>.multiply"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 35, "message": "AssertionError"}], "stdout": "XMT: Removing body of function multiply\n", "longrepr": "calculator = <calculator.Calculator object at 0x1062c8210>\n\n    def test_multiply(calculator):\n>       assert calculator.multiply(3, 3) == 9\nE       assert None == 9\nE        +  where None = <bound method Calculator.multiply of <calculator.Calculator object at 0x1062c8210>>(3, 3)\nE        +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x1062c8210>> = <calculator.Calculator object at 0x1062c8210>.multiply\n\nsimplePro/test_calculator.py:35: AssertionError"}, "teardown": {"duration": 0.0003560829791240394, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide", "lineno": 42, "outcome": "failed", "keywords": ["test_divide", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005206670030020177, "outcome": "passed"}, "call": {"duration": 0.0005799159989692271, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 44, "message": "assert None == 5\n +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x10630e010>>(10, 2)\n +    where <bound method Calculator.divide of <calculator.Calculator object at 0x10630e010>> = <calculator.Calculator object at 0x10630e010>.divide"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 44, "message": "AssertionError"}], "stdout": "XMT: Removing body of function divide\n", "longrepr": "calculator = <calculator.Calculator object at 0x10630e010>\n\n    def test_divide(calculator):\n>       assert calculator.divide(10, 2) == 5\nE       assert None == 5\nE        +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x10630e010>>(10, 2)\nE        +    where <bound method Calculator.divide of <calculator.Calculator object at 0x10630e010>> = <calculator.Calculator object at 0x10630e010>.divide\n\nsimplePro/test_calculator.py:44: AssertionError"}, "teardown": {"duration": 0.00032354099676012993, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "lineno": 54, "outcome": "failed", "keywords": ["test_divide_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0004887499962933362, "outcome": "passed"}, "call": {"duration": 0.00042983301682397723, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 56, "message": "Failed: DID NOT RAISE <class 'ValueError'>"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 56, "message": "Failed"}], "stdout": "XMT: Removing body of function divide\n", "longrepr": "calculator = <calculator.Calculator object at 0x106314ad0>\n\n    def test_divide_by_zero(calculator):\n>       with pytest.raises(ValueError, match=\"Cannot divide by zero\"):\nE       Failed: DID NOT RAISE <class 'ValueError'>\n\nsimplePro/test_calculator.py:56: Failed"}, "teardown": {"duration": 0.000335541000822559, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "lineno": 58, "outcome": "failed", "keywords": ["test_modulus", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0004931660078000277, "outcome": "passed"}, "call": {"duration": 0.0005518750112969428, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 60, "message": "assert None == 1\n +  where None = <bound method Calculator.modulus of <calculator.Calculator object at 0x106302e50>>(10, 3)\n +    where <bound method Calculator.modulus of <calculator.Calculator object at 0x106302e50>> = <calculator.Calculator object at 0x106302e50>.modulus"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 60, "message": "AssertionError"}], "stdout": "XMT: Removing body of function modulus\n", "longrepr": "calculator = <calculator.Calculator object at 0x106302e50>\n\n    def test_modulus(calculator):\n>       assert calculator.modulus(10, 3) == 1\nE       assert None == 1\nE        +  where None = <bound method Calculator.modulus of <calculator.Calculator object at 0x106302e50>>(10, 3)\nE        +    where <bound method Calculator.modulus of <calculator.Calculator object at 0x106302e50>> = <calculator.Calculator object at 0x106302e50>.modulus\n\nsimplePro/test_calculator.py:60: AssertionError"}, "teardown": {"duration": 0.00032762502087280154, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "lineno": 70, "outcome": "failed", "keywords": ["test_modulus_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005104590090923011, "outcome": "passed"}, "call": {"duration": 0.0004030840063933283, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 72, "message": "Failed: DID NOT RAISE <class 'ValueError'>"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 72, "message": "Failed"}], "stdout": "XMT: Removing body of function modulus\n", "longrepr": "calculator = <calculator.Calculator object at 0x106321dd0>\n\n    def test_modulus_by_zero(calculator):\n>       with pytest.raises(ValueError, match=\"Cannot divide by zero\"):\nE       Failed: DID NOT RAISE <class 'ValueError'>\n\nsimplePro/test_calculator.py:72: Failed"}, "teardown": {"duration": 0.0003654580214060843, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_power", "lineno": 74, "outcome": "failed", "keywords": ["test_power", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005468750023283064, "outcome": "passed"}, "call": {"duration": 0.0006004160095471889, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 76, "message": "assert None == 8\n +  where None = <bound method Calculator.power of <calculator.Calculator object at 0x10631aa90>>(2, 3)\n +    where <bound method Calculator.power of <calculator.Calculator object at 0x10631aa90>> = <calculator.Calculator object at 0x10631aa90>.power"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 76, "message": "AssertionError"}], "stdout": "XMT: Removing body of function power\n", "longrepr": "calculator = <calculator.Calculator object at 0x10631aa90>\n\n    def test_power(calculator):\n>       assert calculator.power(2, 3) == 8\nE       assert None == 8\nE        +  where None = <bound method Calculator.power of <calculator.Calculator object at 0x10631aa90>>(2, 3)\nE        +    where <bound method Calculator.power of <calculator.Calculator object at 0x10631aa90>> = <calculator.Calculator object at 0x10631aa90>.power\n\nsimplePro/test_calculator.py:76: AssertionError"}, "teardown": {"duration": 0.00034649998997338116, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "lineno": 84, "outcome": "failed", "keywords": ["test_square_root", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005006669962313026, "outcome": "passed"}, "call": {"duration": 0.0003702910034917295, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 86, "message": "TypeError: unsupported operand type(s) for -: 'NoneType' and 'int'"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 86, "message": "TypeError"}], "stdout": "XMT: Removing body of function square_root\n", "longrepr": "calculator = <calculator.Calculator object at 0x106302510>\n\n    def test_square_root(calculator):\n>       assert abs(calculator.square_root(4) - 2) < 1e-9\nE       TypeError: unsupported operand type(s) for -: 'NoneType' and 'int'\n\nsimplePro/test_calculator.py:86: TypeError"}, "teardown": {"duration": 0.00033037501270882785, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "lineno": 93, "outcome": "failed", "keywords": ["test_square_root_of_negative", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.00048395799240097404, "outcome": "passed"}, "call": {"duration": 0.00037079202593304217, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 95, "message": "Failed: DID NOT RAISE <class 'ValueError'>"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 95, "message": "Failed"}], "stdout": "XMT: Removing body of function square_root\n", "longrepr": "calculator = <calculator.Calculator object at 0x10630f090>\n\n    def test_square_root_of_negative(calculator):\n>       with pytest.raises(ValueError, match=\"Cannot take the square root of a negative number\"):\nE       Failed: DID NOT RAISE <class 'ValueError'>\n\nsimplePro/test_calculator.py:95: Failed"}, "teardown": {"duration": 0.0003274999908171594, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "lineno": 97, "outcome": "failed", "keywords": ["test_square_root_non_converging", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0004795420099981129, "outcome": "passed"}, "call": {"duration": 0.00035683298483490944, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 100, "message": "Failed: DID NOT RAISE <class 'ValueError'>"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 100, "message": "Failed"}], "stdout": "XMT: Removing body of function square_root\n", "longrepr": "calculator = <calculator.Calculator object at 0x1062c8610>\n\n    def test_square_root_non_converging(calculator):\n        # Force the method to fail by setting max_iterations to 1\n>       with pytest.raises(ValueError, match=\"Failed to converge to a solution\"):\nE       Failed: DID NOT RAISE <class 'ValueError'>\n\nsimplePro/test_calculator.py:100: Failed"}, "teardown": {"duration": 0.000371750007616356, "outcome": "passed"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}