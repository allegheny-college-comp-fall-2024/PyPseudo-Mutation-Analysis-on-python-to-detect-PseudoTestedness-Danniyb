{"created": 1729267232.057007, "duration": 0.22278213500976562, "exitcode": 1, "root": "/Users/danielbekele/senior/comp/PyPseudoTest", "environment": {}, "summary": {"failed": 10, "passed": 2, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add[1-2-3]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_add[-1-1-0]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_add[100-50-150]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_subtract[5-3-2]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_subtract[10-5-5]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_subtract[0-0-0]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply[3-3-9]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_multiply[2-5-10]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_multiply[10-0-0]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide[10-2-5]", "type": "Function", "lineno": 41}, {"nodeid": "simplePro/test_calculator.py::test_divide[9-3-3]", "type": "Function", "lineno": 41}, {"nodeid": "simplePro/test_calculator.py::test_divide[5-0-None]", "type": "Function", "lineno": 41}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add[1-2-3]", "lineno": 17, "outcome": "failed", "keywords": ["test_add[1-2-3]", "parametrize", "pytestmark", "1-2-3", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0016842080076457933, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0012706249981420115, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "assert 1 == 3\n +  where 1 = <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102f01450>>(1, 2)\n +    where <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102f01450>> = <mutated_calculator.Calculator object at 0x102f01450>.add"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 24, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-addition' is enabled: True\nMutant skip-addition active, skipping addition\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102f01450>, a = 1, b = 2, expected = 3\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (1, 2, 3),\n        (-1, 1, 0),\n        (100, 50, 150)\n    ])\n    def test_add(calculator, a, b, expected):\n>       assert calculator.add(a, b) == expected\nE       assert 1 == 3\nE        +  where 1 = <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102f01450>>(1, 2)\nE        +    where <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102f01450>> = <mutated_calculator.Calculator object at 0x102f01450>.add\n\nsimplePro/test_calculator.py:24: AssertionError"}, "teardown": {"duration": 0.0007946249970700592, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_add[-1-1-0]", "lineno": 17, "outcome": "failed", "keywords": ["test_add[-1-1-0]", "parametrize", "pytestmark", "-1-1-0", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.001312624997808598, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0009046250052051619, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "assert -1 == 0\n +  where -1 = <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102ee7710>>(-1, 1)\n +    where <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102ee7710>> = <mutated_calculator.Calculator object at 0x102ee7710>.add"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 24, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-addition' is enabled: True\nMutant skip-addition active, skipping addition\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102ee7710>, a = -1, b = 1, expected = 0\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (1, 2, 3),\n        (-1, 1, 0),\n        (100, 50, 150)\n    ])\n    def test_add(calculator, a, b, expected):\n>       assert calculator.add(a, b) == expected\nE       assert -1 == 0\nE        +  where -1 = <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102ee7710>>(-1, 1)\nE        +    where <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102ee7710>> = <mutated_calculator.Calculator object at 0x102ee7710>.add\n\nsimplePro/test_calculator.py:24: AssertionError"}, "teardown": {"duration": 0.0006943750049686059, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_add[100-50-150]", "lineno": 17, "outcome": "failed", "keywords": ["test_add[100-50-150]", "parametrize", "pytestmark", "100-50-150", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0013088339910609648, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0008769590058363974, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "assert 100 == 150\n +  where 100 = <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102f14e90>>(100, 50)\n +    where <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102f14e90>> = <mutated_calculator.Calculator object at 0x102f14e90>.add"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 24, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-addition' is enabled: True\nMutant skip-addition active, skipping addition\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102f14e90>, a = 100, b = 50, expected = 150\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (1, 2, 3),\n        (-1, 1, 0),\n        (100, 50, 150)\n    ])\n    def test_add(calculator, a, b, expected):\n>       assert calculator.add(a, b) == expected\nE       assert 100 == 150\nE        +  where 100 = <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102f14e90>>(100, 50)\nE        +    where <bound method Calculator.add of <mutated_calculator.Calculator object at 0x102f14e90>> = <mutated_calculator.Calculator object at 0x102f14e90>.add\n\nsimplePro/test_calculator.py:24: AssertionError"}, "teardown": {"duration": 0.0007018749893177301, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[5-3-2]", "lineno": 25, "outcome": "failed", "keywords": ["test_subtract[5-3-2]", "parametrize", "pytestmark", "5-3-2", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012858340051025152, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0008849579899106175, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "assert 8 == 2\n +  where 8 = <bound method Calculator.subtract of <mutated_calculator.Calculator object at 0x102f2cd50>>(5, 3)\n +    where <bound method Calculator.subtract of <mutated_calculator.Calculator object at 0x102f2cd50>> = <mutated_calculator.Calculator object at 0x102f2cd50>.subtract"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 32, "message": "AssertionError"}], "stdout": "Checking if mutant 'invert-subtraction' is enabled: True\nMutant invert-subtraction active, inverting subtraction\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102f2cd50>, a = 5, b = 3, expected = 2\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (5, 3, 2),\n        (10, 5, 5),\n        (0, 0, 0)\n    ])\n    def test_subtract(calculator, a, b, expected):\n>       assert calculator.subtract(a, b) == expected\nE       assert 8 == 2\nE        +  where 8 = <bound method Calculator.subtract of <mutated_calculator.Calculator object at 0x102f2cd50>>(5, 3)\nE        +    where <bound method Calculator.subtract of <mutated_calculator.Calculator object at 0x102f2cd50>> = <mutated_calculator.Calculator object at 0x102f2cd50>.subtract\n\nsimplePro/test_calculator.py:32: AssertionError"}, "teardown": {"duration": 0.0006314580095931888, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[10-5-5]", "lineno": 25, "outcome": "failed", "keywords": ["test_subtract[10-5-5]", "parametrize", "pytestmark", "10-5-5", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.001290707994485274, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0009670839936006814, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "assert 15 == 5\n +  where 15 = <bound method Calculator.subtract of <mutated_calculator.Calculator object at 0x102f2b210>>(10, 5)\n +    where <bound method Calculator.subtract of <mutated_calculator.Calculator object at 0x102f2b210>> = <mutated_calculator.Calculator object at 0x102f2b210>.subtract"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 32, "message": "AssertionError"}], "stdout": "Checking if mutant 'invert-subtraction' is enabled: True\nMutant invert-subtraction active, inverting subtraction\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102f2b210>, a = 10, b = 5, expected = 5\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (5, 3, 2),\n        (10, 5, 5),\n        (0, 0, 0)\n    ])\n    def test_subtract(calculator, a, b, expected):\n>       assert calculator.subtract(a, b) == expected\nE       assert 15 == 5\nE        +  where 15 = <bound method Calculator.subtract of <mutated_calculator.Calculator object at 0x102f2b210>>(10, 5)\nE        +    where <bound method Calculator.subtract of <mutated_calculator.Calculator object at 0x102f2b210>> = <mutated_calculator.Calculator object at 0x102f2b210>.subtract\n\nsimplePro/test_calculator.py:32: AssertionError"}, "teardown": {"duration": 0.0006460409931605682, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[0-0-0]", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract[0-0-0]", "parametrize", "pytestmark", "0-0-0", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012543750053737313, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0005184170004213229, "outcome": "passed", "stdout": "Checking if mutant 'invert-subtraction' is enabled: True\nMutant invert-subtraction active, inverting subtraction\n"}, "teardown": {"duration": 0.000618417005171068, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[3-3-9]", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply[3-3-9]", "parametrize", "pytestmark", "3-3-9", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.001220624995767139, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.000869625000632368, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "assert 1 == 9\n +  where 1 = <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f02f90>>(3, 3)\n +    where <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f02f90>> = <mutated_calculator.Calculator object at 0x102f02f90>.multiply"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 40, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-multiplication' is enabled: True\nMutant skip-multiplication active, skipping multiplication\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102f02f90>, a = 3, b = 3, expected = 9\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (3, 3, 9),\n        (2, 5, 10),\n        (10, 0, 0)\n    ])\n    def test_multiply(calculator, a, b, expected):\n>       assert calculator.multiply(a, b) == expected\nE       assert 1 == 9\nE        +  where 1 = <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f02f90>>(3, 3)\nE        +    where <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f02f90>> = <mutated_calculator.Calculator object at 0x102f02f90>.multiply\n\nsimplePro/test_calculator.py:40: AssertionError"}, "teardown": {"duration": 0.0006731250032316893, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[2-5-10]", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply[2-5-10]", "parametrize", "pytestmark", "2-5-10", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012742090038955212, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0008717919990886003, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "assert 1 == 10\n +  where 1 = <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f2d490>>(2, 5)\n +    where <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f2d490>> = <mutated_calculator.Calculator object at 0x102f2d490>.multiply"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 40, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-multiplication' is enabled: True\nMutant skip-multiplication active, skipping multiplication\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102f2d490>, a = 2, b = 5, expected = 10\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (3, 3, 9),\n        (2, 5, 10),\n        (10, 0, 0)\n    ])\n    def test_multiply(calculator, a, b, expected):\n>       assert calculator.multiply(a, b) == expected\nE       assert 1 == 10\nE        +  where 1 = <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f2d490>>(2, 5)\nE        +    where <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f2d490>> = <mutated_calculator.Calculator object at 0x102f2d490>.multiply\n\nsimplePro/test_calculator.py:40: AssertionError"}, "teardown": {"duration": 0.0006287500000325963, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[10-0-0]", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply[10-0-0]", "parametrize", "pytestmark", "10-0-0", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012883750023320317, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0009262910025427118, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "assert 1 == 0\n +  where 1 = <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f37c90>>(10, 0)\n +    where <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f37c90>> = <mutated_calculator.Calculator object at 0x102f37c90>.multiply"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 40, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-multiplication' is enabled: True\nMutant skip-multiplication active, skipping multiplication\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102f37c90>, a = 10, b = 0, expected = 0\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (3, 3, 9),\n        (2, 5, 10),\n        (10, 0, 0)\n    ])\n    def test_multiply(calculator, a, b, expected):\n>       assert calculator.multiply(a, b) == expected\nE       assert 1 == 0\nE        +  where 1 = <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f37c90>>(10, 0)\nE        +    where <bound method Calculator.multiply of <mutated_calculator.Calculator object at 0x102f37c90>> = <mutated_calculator.Calculator object at 0x102f37c90>.multiply\n\nsimplePro/test_calculator.py:40: AssertionError"}, "teardown": {"duration": 0.0006809170008637011, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[10-2-5]", "lineno": 41, "outcome": "failed", "keywords": ["test_divide[10-2-5]", "parametrize", "pytestmark", "10-2-5", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012717920035356656, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0008625000045867637, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "assert None == 5\n +  where None = <bound method Calculator.divide of <mutated_calculator.Calculator object at 0x102f1d810>>(10, 2)\n +    where <bound method Calculator.divide of <mutated_calculator.Calculator object at 0x102f1d810>> = <mutated_calculator.Calculator object at 0x102f1d810>.divide"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 48, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-division' is enabled: True\nMutant skip-division active, skipping division\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102f1d810>, a = 10, b = 2, expected = 5\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (10, 2, 5),\n        (9, 3, 3),\n        (5, 0, None)\n    ])\n    def test_divide(calculator, a, b, expected):\n>       assert calculator.divide(a, b) == expected\nE       assert None == 5\nE        +  where None = <bound method Calculator.divide of <mutated_calculator.Calculator object at 0x102f1d810>>(10, 2)\nE        +    where <bound method Calculator.divide of <mutated_calculator.Calculator object at 0x102f1d810>> = <mutated_calculator.Calculator object at 0x102f1d810>.divide\n\nsimplePro/test_calculator.py:48: AssertionError"}, "teardown": {"duration": 0.0006745830032741651, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[9-3-3]", "lineno": 41, "outcome": "failed", "keywords": ["test_divide[9-3-3]", "parametrize", "pytestmark", "9-3-3", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012840830022469163, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0008682500047143549, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "assert None == 3\n +  where None = <bound method Calculator.divide of <mutated_calculator.Calculator object at 0x102f1f510>>(9, 3)\n +    where <bound method Calculator.divide of <mutated_calculator.Calculator object at 0x102f1f510>> = <mutated_calculator.Calculator object at 0x102f1f510>.divide"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 48, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-division' is enabled: True\nMutant skip-division active, skipping division\n", "longrepr": "calculator = <mutated_calculator.Calculator object at 0x102f1f510>, a = 9, b = 3, expected = 3\n\n    @pytest.mark.parametrize(\"a, b, expected\", [\n        (10, 2, 5),\n        (9, 3, 3),\n        (5, 0, None)\n    ])\n    def test_divide(calculator, a, b, expected):\n>       assert calculator.divide(a, b) == expected\nE       assert None == 3\nE        +  where None = <bound method Calculator.divide of <mutated_calculator.Calculator object at 0x102f1f510>>(9, 3)\nE        +    where <bound method Calculator.divide of <mutated_calculator.Calculator object at 0x102f1f510>> = <mutated_calculator.Calculator object at 0x102f1f510>.divide\n\nsimplePro/test_calculator.py:48: AssertionError"}, "teardown": {"duration": 0.0006298330117715523, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[5-0-None]", "lineno": 41, "outcome": "passed", "keywords": ["test_divide[5-0-None]", "parametrize", "pytestmark", "5-0-None", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.001250166998943314, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'skip-division', 'invert-subtraction', 'skip-multiplication', 'skip-addition'}\n"}, "call": {"duration": 0.0005543750012293458, "outcome": "passed", "stdout": "Checking if mutant 'skip-division' is enabled: True\nMutant skip-division active, skipping division\n"}, "teardown": {"duration": 0.0006602909998036921, "outcome": "passed"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}