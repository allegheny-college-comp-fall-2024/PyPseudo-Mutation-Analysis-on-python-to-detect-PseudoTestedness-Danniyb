{"created": 1729815926.676091, "duration": 0.12877178192138672, "exitcode": 1, "root": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo", "environment": {}, "summary": {"failed": 10, "passed": 2, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add[1-2-3]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_add[-1-1-0]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_add[100-50-150]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_subtract[5-3-2]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_subtract[10-5-5]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_subtract[0-0-0]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply[3-3-9]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_multiply[2-5-10]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_multiply[10-0-0]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide[10-2-5]", "type": "Function", "lineno": 41}, {"nodeid": "simplePro/test_calculator.py::test_divide[9-3-3]", "type": "Function", "lineno": 41}, {"nodeid": "simplePro/test_calculator.py::test_divide[5-0-None]", "type": "Function", "lineno": 41}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add[1-2-3]", "lineno": 17, "outcome": "failed", "keywords": ["test_add[1-2-3]", "parametrize", "pytestmark", "1-2-3", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0010951249860227108, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0007819169841241091, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "assert 1 == 3\n +  where 1 = <bound method Calculator.add of <calculator.Calculator object at 0x107099310>>(1, 2)\n +    where <bound method Calculator.add of <calculator.Calculator object at 0x107099310>> = <calculator.Calculator object at 0x107099310>.add"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-addition' is enabled: True\nMutant skip-addition active, skipping addition\n", "longrepr": "calculator = <calculator.Calculator object at 0x107099310>, a = 1, b = 2, expected = 3\n\n>   ???\nE   assert 1 == 3\nE    +  where 1 = <bound method Calculator.add of <calculator.Calculator object at 0x107099310>>(1, 2)\nE    +    where <bound method Calculator.add of <calculator.Calculator object at 0x107099310>> = <calculator.Calculator object at 0x107099310>.add\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:24: AssertionError"}, "teardown": {"duration": 0.0006138329918030649, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_add[-1-1-0]", "lineno": 17, "outcome": "failed", "keywords": ["test_add[-1-1-0]", "parametrize", "pytestmark", "-1-1-0", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0009212919976562262, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0006322919798549265, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "assert -1 == 0\n +  where -1 = <bound method Calculator.add of <calculator.Calculator object at 0x10709be50>>(-1, 1)\n +    where <bound method Calculator.add of <calculator.Calculator object at 0x10709be50>> = <calculator.Calculator object at 0x10709be50>.add"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-addition' is enabled: True\nMutant skip-addition active, skipping addition\n", "longrepr": "calculator = <calculator.Calculator object at 0x10709be50>, a = -1, b = 1, expected = 0\n\n>   ???\nE   assert -1 == 0\nE    +  where -1 = <bound method Calculator.add of <calculator.Calculator object at 0x10709be50>>(-1, 1)\nE    +    where <bound method Calculator.add of <calculator.Calculator object at 0x10709be50>> = <calculator.Calculator object at 0x10709be50>.add\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:24: AssertionError"}, "teardown": {"duration": 0.0004939160135108978, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_add[100-50-150]", "lineno": 17, "outcome": "failed", "keywords": ["test_add[100-50-150]", "parametrize", "pytestmark", "100-50-150", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0009188750118482858, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0006182919896673411, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "assert 100 == 150\n +  where 100 = <bound method Calculator.add of <calculator.Calculator object at 0x1070ae090>>(100, 50)\n +    where <bound method Calculator.add of <calculator.Calculator object at 0x1070ae090>> = <calculator.Calculator object at 0x1070ae090>.add"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-addition' is enabled: True\nMutant skip-addition active, skipping addition\n", "longrepr": "calculator = <calculator.Calculator object at 0x1070ae090>, a = 100, b = 50, expected = 150\n\n>   ???\nE   assert 100 == 150\nE    +  where 100 = <bound method Calculator.add of <calculator.Calculator object at 0x1070ae090>>(100, 50)\nE    +    where <bound method Calculator.add of <calculator.Calculator object at 0x1070ae090>> = <calculator.Calculator object at 0x1070ae090>.add\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:24: AssertionError"}, "teardown": {"duration": 0.0004566670104395598, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[5-3-2]", "lineno": 25, "outcome": "failed", "keywords": ["test_subtract[5-3-2]", "parametrize", "pytestmark", "5-3-2", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0009926249913405627, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0006528329977300018, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "assert 8 == 2\n +  where 8 = <bound method Calculator.subtract of <calculator.Calculator object at 0x1070b8550>>(5, 3)\n +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x1070b8550>> = <calculator.Calculator object at 0x1070b8550>.subtract"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "AssertionError"}], "stdout": "Checking if mutant 'invert-subtraction' is enabled: True\nMutant invert-subtraction active, inverting subtraction\n", "longrepr": "calculator = <calculator.Calculator object at 0x1070b8550>, a = 5, b = 3, expected = 2\n\n>   ???\nE   assert 8 == 2\nE    +  where 8 = <bound method Calculator.subtract of <calculator.Calculator object at 0x1070b8550>>(5, 3)\nE    +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x1070b8550>> = <calculator.Calculator object at 0x1070b8550>.subtract\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:32: AssertionError"}, "teardown": {"duration": 0.0011403750104364008, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[10-5-5]", "lineno": 25, "outcome": "failed", "keywords": ["test_subtract[10-5-5]", "parametrize", "pytestmark", "10-5-5", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0009057080023922026, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0006106660002842546, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "assert 15 == 5\n +  where 15 = <bound method Calculator.subtract of <calculator.Calculator object at 0x1070ac490>>(10, 5)\n +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x1070ac490>> = <calculator.Calculator object at 0x1070ac490>.subtract"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "AssertionError"}], "stdout": "Checking if mutant 'invert-subtraction' is enabled: True\nMutant invert-subtraction active, inverting subtraction\n", "longrepr": "calculator = <calculator.Calculator object at 0x1070ac490>, a = 10, b = 5, expected = 5\n\n>   ???\nE   assert 15 == 5\nE    +  where 15 = <bound method Calculator.subtract of <calculator.Calculator object at 0x1070ac490>>(10, 5)\nE    +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x1070ac490>> = <calculator.Calculator object at 0x1070ac490>.subtract\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:32: AssertionError"}, "teardown": {"duration": 0.0004488329868763685, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[0-0-0]", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract[0-0-0]", "parametrize", "pytestmark", "0-0-0", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008872920006979257, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0003490830131340772, "outcome": "passed", "stdout": "Checking if mutant 'invert-subtraction' is enabled: True\nMutant invert-subtraction active, inverting subtraction\n"}, "teardown": {"duration": 0.0004364580090623349, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[3-3-9]", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply[3-3-9]", "parametrize", "pytestmark", "3-3-9", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0009267499845009297, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.000708041014149785, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "assert 1 == 9\n +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x107098990>>(3, 3)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x107098990>> = <calculator.Calculator object at 0x107098990>.multiply"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-multiplication' is enabled: True\nMutant skip-multiplication active, skipping multiplication\n", "longrepr": "calculator = <calculator.Calculator object at 0x107098990>, a = 3, b = 3, expected = 9\n\n>   ???\nE   assert 1 == 9\nE    +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x107098990>>(3, 3)\nE    +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x107098990>> = <calculator.Calculator object at 0x107098990>.multiply\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:40: AssertionError"}, "teardown": {"duration": 0.0004500419890973717, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[2-5-10]", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply[2-5-10]", "parametrize", "pytestmark", "2-5-10", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008729160181246698, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0006001669971738011, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "assert 1 == 10\n +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x1070bb0d0>>(2, 5)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x1070bb0d0>> = <calculator.Calculator object at 0x1070bb0d0>.multiply"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-multiplication' is enabled: True\nMutant skip-multiplication active, skipping multiplication\n", "longrepr": "calculator = <calculator.Calculator object at 0x1070bb0d0>, a = 2, b = 5, expected = 10\n\n>   ???\nE   assert 1 == 10\nE    +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x1070bb0d0>>(2, 5)\nE    +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x1070bb0d0>> = <calculator.Calculator object at 0x1070bb0d0>.multiply\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:40: AssertionError"}, "teardown": {"duration": 0.000526624993653968, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[10-0-0]", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply[10-0-0]", "parametrize", "pytestmark", "10-0-0", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008814999891910702, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0006094169802963734, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "assert 1 == 0\n +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x10709b5d0>>(10, 0)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x10709b5d0>> = <calculator.Calculator object at 0x10709b5d0>.multiply"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-multiplication' is enabled: True\nMutant skip-multiplication active, skipping multiplication\n", "longrepr": "calculator = <calculator.Calculator object at 0x10709b5d0>, a = 10, b = 0, expected = 0\n\n>   ???\nE   assert 1 == 0\nE    +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x10709b5d0>>(10, 0)\nE    +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x10709b5d0>> = <calculator.Calculator object at 0x10709b5d0>.multiply\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:40: AssertionError"}, "teardown": {"duration": 0.00046412498340941966, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[10-2-5]", "lineno": 41, "outcome": "failed", "keywords": ["test_divide[10-2-5]", "parametrize", "pytestmark", "10-2-5", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0009402080031577498, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0006478749855887145, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "assert None == 5\n +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x1070c8f10>>(10, 2)\n +    where <bound method Calculator.divide of <calculator.Calculator object at 0x1070c8f10>> = <calculator.Calculator object at 0x1070c8f10>.divide"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-division' is enabled: True\nMutant skip-division active, skipping division\n", "longrepr": "calculator = <calculator.Calculator object at 0x1070c8f10>, a = 10, b = 2, expected = 5\n\n>   ???\nE   assert None == 5\nE    +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x1070c8f10>>(10, 2)\nE    +    where <bound method Calculator.divide of <calculator.Calculator object at 0x1070c8f10>> = <calculator.Calculator object at 0x1070c8f10>.divide\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:48: AssertionError"}, "teardown": {"duration": 0.00045645798672921956, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[9-3-3]", "lineno": 41, "outcome": "failed", "keywords": ["test_divide[9-3-3]", "parametrize", "pytestmark", "9-3-3", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008651670068502426, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.0006101669860072434, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "assert None == 3\n +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x1070cb2d0>>(9, 3)\n +    where <bound method Calculator.divide of <calculator.Calculator object at 0x1070cb2d0>> = <calculator.Calculator object at 0x1070cb2d0>.divide"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-division' is enabled: True\nMutant skip-division active, skipping division\n", "longrepr": "calculator = <calculator.Calculator object at 0x1070cb2d0>, a = 9, b = 3, expected = 3\n\n>   ???\nE   assert None == 3\nE    +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x1070cb2d0>>(9, 3)\nE    +    where <bound method Calculator.divide of <calculator.Calculator object at 0x1070cb2d0>> = <calculator.Calculator object at 0x1070cb2d0>.divide\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:48: AssertionError"}, "teardown": {"duration": 0.0004891669959761202, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[5-0-None]", "lineno": 41, "outcome": "passed", "keywords": ["test_divide[5-0-None]", "parametrize", "pytestmark", "5-0-None", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008877909858711064, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-division', 'skip-multiplication'}\n"}, "call": {"duration": 0.00036220799665898085, "outcome": "passed", "stdout": "Checking if mutant 'skip-division' is enabled: True\nMutant skip-division active, skipping division\n"}, "teardown": {"duration": 0.0004384159983601421, "outcome": "passed"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}