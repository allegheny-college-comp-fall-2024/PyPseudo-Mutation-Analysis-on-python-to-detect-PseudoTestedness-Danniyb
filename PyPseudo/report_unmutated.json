{"created": 1729879076.9238138, "duration": 0.11956000328063965, "exitcode": 1, "root": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo", "environment": {}, "summary": {"failed": 10, "passed": 2, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add[1-2-3]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_add[-1-1-0]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_add[100-50-150]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_subtract[5-3-2]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_subtract[10-5-5]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_subtract[0-0-0]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply[3-3-9]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_multiply[2-5-10]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_multiply[10-0-0]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide[10-2-5]", "type": "Function", "lineno": 41}, {"nodeid": "simplePro/test_calculator.py::test_divide[9-3-3]", "type": "Function", "lineno": 41}, {"nodeid": "simplePro/test_calculator.py::test_divide[5-0-None]", "type": "Function", "lineno": 41}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add[1-2-3]", "lineno": 17, "outcome": "failed", "keywords": ["test_add[1-2-3]", "parametrize", "pytestmark", "1-2-3", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0012239999778103083, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0007504580134991556, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "assert 1 == 3\n +  where 1 = <bound method Calculator.add of <calculator.Calculator object at 0x1024fd490>>(1, 2)\n +    where <bound method Calculator.add of <calculator.Calculator object at 0x1024fd490>> = <calculator.Calculator object at 0x1024fd490>.add"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-addition' is enabled: True\nMutant skip-addition active, skipping addition\n", "longrepr": "calculator = <calculator.Calculator object at 0x1024fd490>, a = 1, b = 2, expected = 3\n\n>   ???\nE   assert 1 == 3\nE    +  where 1 = <bound method Calculator.add of <calculator.Calculator object at 0x1024fd490>>(1, 2)\nE    +    where <bound method Calculator.add of <calculator.Calculator object at 0x1024fd490>> = <calculator.Calculator object at 0x1024fd490>.add\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:24: AssertionError"}, "teardown": {"duration": 0.0004896250029560179, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_add[-1-1-0]", "lineno": 17, "outcome": "failed", "keywords": ["test_add[-1-1-0]", "parametrize", "pytestmark", "-1-1-0", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008938329992815852, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0006020829896442592, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "assert -1 == 0\n +  where -1 = <bound method Calculator.add of <calculator.Calculator object at 0x1024ffad0>>(-1, 1)\n +    where <bound method Calculator.add of <calculator.Calculator object at 0x1024ffad0>> = <calculator.Calculator object at 0x1024ffad0>.add"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-addition' is enabled: True\nMutant skip-addition active, skipping addition\n", "longrepr": "calculator = <calculator.Calculator object at 0x1024ffad0>, a = -1, b = 1, expected = 0\n\n>   ???\nE   assert -1 == 0\nE    +  where -1 = <bound method Calculator.add of <calculator.Calculator object at 0x1024ffad0>>(-1, 1)\nE    +    where <bound method Calculator.add of <calculator.Calculator object at 0x1024ffad0>> = <calculator.Calculator object at 0x1024ffad0>.add\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:24: AssertionError"}, "teardown": {"duration": 0.0005155840190127492, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_add[100-50-150]", "lineno": 17, "outcome": "failed", "keywords": ["test_add[100-50-150]", "parametrize", "pytestmark", "100-50-150", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008975410019047558, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0005759169871453196, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "assert 100 == 150\n +  where 100 = <bound method Calculator.add of <calculator.Calculator object at 0x1025120d0>>(100, 50)\n +    where <bound method Calculator.add of <calculator.Calculator object at 0x1025120d0>> = <calculator.Calculator object at 0x1025120d0>.add"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 24, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-addition' is enabled: True\nMutant skip-addition active, skipping addition\n", "longrepr": "calculator = <calculator.Calculator object at 0x1025120d0>, a = 100, b = 50, expected = 150\n\n>   ???\nE   assert 100 == 150\nE    +  where 100 = <bound method Calculator.add of <calculator.Calculator object at 0x1025120d0>>(100, 50)\nE    +    where <bound method Calculator.add of <calculator.Calculator object at 0x1025120d0>> = <calculator.Calculator object at 0x1025120d0>.add\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:24: AssertionError"}, "teardown": {"duration": 0.00039916698005981743, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[5-3-2]", "lineno": 25, "outcome": "failed", "keywords": ["test_subtract[5-3-2]", "parametrize", "pytestmark", "5-3-2", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008301659836433828, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0005518749821931124, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "assert 8 == 2\n +  where 8 = <bound method Calculator.subtract of <calculator.Calculator object at 0x10251c590>>(5, 3)\n +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x10251c590>> = <calculator.Calculator object at 0x10251c590>.subtract"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "AssertionError"}], "stdout": "Checking if mutant 'invert-subtraction' is enabled: True\nMutant invert-subtraction active, inverting subtraction\n", "longrepr": "calculator = <calculator.Calculator object at 0x10251c590>, a = 5, b = 3, expected = 2\n\n>   ???\nE   assert 8 == 2\nE    +  where 8 = <bound method Calculator.subtract of <calculator.Calculator object at 0x10251c590>>(5, 3)\nE    +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x10251c590>> = <calculator.Calculator object at 0x10251c590>.subtract\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:32: AssertionError"}, "teardown": {"duration": 0.0010189999884460121, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[10-5-5]", "lineno": 25, "outcome": "failed", "keywords": ["test_subtract[10-5-5]", "parametrize", "pytestmark", "10-5-5", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.000792667007772252, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0005933750071562827, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "assert 15 == 5\n +  where 15 = <bound method Calculator.subtract of <calculator.Calculator object at 0x102510710>>(10, 5)\n +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x102510710>> = <calculator.Calculator object at 0x102510710>.subtract"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 32, "message": "AssertionError"}], "stdout": "Checking if mutant 'invert-subtraction' is enabled: True\nMutant invert-subtraction active, inverting subtraction\n", "longrepr": "calculator = <calculator.Calculator object at 0x102510710>, a = 10, b = 5, expected = 5\n\n>   ???\nE   assert 15 == 5\nE    +  where 15 = <bound method Calculator.subtract of <calculator.Calculator object at 0x102510710>>(10, 5)\nE    +    where <bound method Calculator.subtract of <calculator.Calculator object at 0x102510710>> = <calculator.Calculator object at 0x102510710>.subtract\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:32: AssertionError"}, "teardown": {"duration": 0.00044262499432079494, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[0-0-0]", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract[0-0-0]", "parametrize", "pytestmark", "0-0-0", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008434999908786267, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.00033320800866931677, "outcome": "passed", "stdout": "Checking if mutant 'invert-subtraction' is enabled: True\nMutant invert-subtraction active, inverting subtraction\n"}, "teardown": {"duration": 0.0003871670051012188, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[3-3-9]", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply[3-3-9]", "parametrize", "pytestmark", "3-3-9", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008032500045374036, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0005963750008959323, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "assert 1 == 9\n +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x1024fc4d0>>(3, 3)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x1024fc4d0>> = <calculator.Calculator object at 0x1024fc4d0>.multiply"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-multiplication' is enabled: True\nMutant skip-multiplication active, skipping multiplication\n", "longrepr": "calculator = <calculator.Calculator object at 0x1024fc4d0>, a = 3, b = 3, expected = 9\n\n>   ???\nE   assert 1 == 9\nE    +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x1024fc4d0>>(3, 3)\nE    +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x1024fc4d0>> = <calculator.Calculator object at 0x1024fc4d0>.multiply\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:40: AssertionError"}, "teardown": {"duration": 0.0004167910083197057, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[2-5-10]", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply[2-5-10]", "parametrize", "pytestmark", "2-5-10", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0007853749848436564, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0005487909947987646, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "assert 1 == 10\n +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x10251ecd0>>(2, 5)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x10251ecd0>> = <calculator.Calculator object at 0x10251ecd0>.multiply"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-multiplication' is enabled: True\nMutant skip-multiplication active, skipping multiplication\n", "longrepr": "calculator = <calculator.Calculator object at 0x10251ecd0>, a = 2, b = 5, expected = 10\n\n>   ???\nE   assert 1 == 10\nE    +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x10251ecd0>>(2, 5)\nE    +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x10251ecd0>> = <calculator.Calculator object at 0x10251ecd0>.multiply\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:40: AssertionError"}, "teardown": {"duration": 0.0004719580174423754, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[10-0-0]", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply[10-0-0]", "parametrize", "pytestmark", "10-0-0", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008739589829929173, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0006418749981094152, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "assert 1 == 0\n +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x1024ff950>>(10, 0)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x1024ff950>> = <calculator.Calculator object at 0x1024ff950>.multiply"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 40, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-multiplication' is enabled: True\nMutant skip-multiplication active, skipping multiplication\n", "longrepr": "calculator = <calculator.Calculator object at 0x1024ff950>, a = 10, b = 0, expected = 0\n\n>   ???\nE   assert 1 == 0\nE    +  where 1 = <bound method Calculator.multiply of <calculator.Calculator object at 0x1024ff950>>(10, 0)\nE    +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x1024ff950>> = <calculator.Calculator object at 0x1024ff950>.multiply\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:40: AssertionError"}, "teardown": {"duration": 0.0004209580074530095, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[10-2-5]", "lineno": 41, "outcome": "failed", "keywords": ["test_divide[10-2-5]", "parametrize", "pytestmark", "10-2-5", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008268749807029963, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0005589170032180846, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "assert None == 5\n +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x10252cb90>>(10, 2)\n +    where <bound method Calculator.divide of <calculator.Calculator object at 0x10252cb90>> = <calculator.Calculator object at 0x10252cb90>.divide"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-division' is enabled: True\nMutant skip-division active, skipping division\n", "longrepr": "calculator = <calculator.Calculator object at 0x10252cb90>, a = 10, b = 2, expected = 5\n\n>   ???\nE   assert None == 5\nE    +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x10252cb90>>(10, 2)\nE    +    where <bound method Calculator.divide of <calculator.Calculator object at 0x10252cb90>> = <calculator.Calculator object at 0x10252cb90>.divide\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:48: AssertionError"}, "teardown": {"duration": 0.0004104999825358391, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[9-3-3]", "lineno": 41, "outcome": "failed", "keywords": ["test_divide[9-3-3]", "parametrize", "pytestmark", "9-3-3", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008047499868553132, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0005481250118464231, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "assert None == 3\n +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x10252f010>>(9, 3)\n +    where <bound method Calculator.divide of <calculator.Calculator object at 0x10252f010>> = <calculator.Calculator object at 0x10252f010>.divide"}, "traceback": [{"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py", "lineno": 48, "message": "AssertionError"}], "stdout": "Checking if mutant 'skip-division' is enabled: True\nMutant skip-division active, skipping division\n", "longrepr": "calculator = <calculator.Calculator object at 0x10252f010>, a = 9, b = 3, expected = 3\n\n>   ???\nE   assert None == 3\nE    +  where None = <bound method Calculator.divide of <calculator.Calculator object at 0x10252f010>>(9, 3)\nE    +    where <bound method Calculator.divide of <calculator.Calculator object at 0x10252f010>> = <calculator.Calculator object at 0x10252f010>.divide\n\n/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudoTest/simplePro/test_calculator.py:48: AssertionError"}, "teardown": {"duration": 0.0004595420032273978, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[5-0-None]", "lineno": 41, "outcome": "passed", "keywords": ["test_divide[5-0-None]", "parametrize", "pytestmark", "5-0-None", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.000911749986698851, "outcome": "passed", "stdout": "Mutation is enabled for the following mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\nMutations enabled. Loading mutants from mutants.json.\nActive mutants: {'invert-subtraction', 'skip-addition', 'skip-multiplication', 'skip-division'}\n"}, "call": {"duration": 0.0003383339790161699, "outcome": "passed", "stdout": "Checking if mutant 'skip-division' is enabled: True\nMutant skip-division active, skipping division\n"}, "teardown": {"duration": 0.0005038329982198775, "outcome": "passed"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}