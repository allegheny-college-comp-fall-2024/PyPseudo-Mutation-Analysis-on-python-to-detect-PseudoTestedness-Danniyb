{"created": 1732565685.119221, "duration": 29.968590021133423, "exitcode": 1, "root": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo", "environment": {}, "summary": {"passed": 10, "failed": 1, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add", "type": "Function", "lineno": 16}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide", "type": "Function", "lineno": 42}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "type": "Function", "lineno": 54}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "type": "Function", "lineno": 58}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "type": "Function", "lineno": 70}, {"nodeid": "simplePro/test_calculator.py::test_power", "type": "Function", "lineno": 74}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "type": "Function", "lineno": 84}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "type": "Function", "lineno": 93}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "type": "Function", "lineno": 97}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add", "lineno": 16, "outcome": "passed", "keywords": ["test_add", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0008194999827537686, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 0.00039679199107922614, "outcome": "passed"}, "teardown": {"duration": 0.0003654999891296029, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005695410072803497, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 0.0003824159794021398, "outcome": "passed"}, "teardown": {"duration": 0.00034029100788757205, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "lineno": 33, "outcome": "passed", "keywords": ["test_multiply", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005349169950932264, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 0.0005517079844139516, "outcome": "passed"}, "teardown": {"duration": 0.0003331669722683728, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide", "lineno": 42, "outcome": "passed", "keywords": ["test_divide", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005532919894903898, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 0.0009162499918602407, "outcome": "passed", "stdout": "SDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\n"}, "teardown": {"duration": 0.00037083300412632525, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "lineno": 54, "outcome": "failed", "keywords": ["test_divide_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005649999948218465, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 29.8880699579895, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/main.py", "lineno": 229, "message": "TimeoutException"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 57, "message": ""}, {"path": "simplePro/calculator.py", "lineno": 58, "message": "in divide"}, {"path": "simplePro/calculator.py", "lineno": 30, "message": "in subtract"}, {"path": "../../../../.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 100, "message": "in _trace"}, {"path": "main.py", "lineno": 229, "message": "TimeoutException"}], "stdout": "SDL: Skipping if statement\n", "longrepr": "calculator = <calculator.Calculator object at 0x10772a910>\n\n    def test_divide_by_zero(calculator):\n        with pytest.raises(ValueError, match=\"Cannot divide by zero\"):\n>           calculator.divide(5, 0)\n\nsimplePro/test_calculator.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsimplePro/calculator.py:58: in divide\n    abs_a = self.subtract(abs_a, abs_b)\nsimplePro/calculator.py:30: in subtract\n    return result\n../../../../.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py:100: in _trace\n    def _trace(self, frame, event, arg_unused):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsignum = 14\nframe = <frame at 0x1073fdea0, file '/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py', line 100, code _trace>\n\n    def handler(signum, frame):\n>       raise TimeoutException()\nE       TimeoutException\n\nmain.py:229: TimeoutException"}, "teardown": {"duration": 9.604098158888519e-05, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "lineno": 58, "outcome": "passed", "keywords": ["test_modulus", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0001875830057542771, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 9.137499728240073e-05, "outcome": "passed"}, "teardown": {"duration": 7.254100637510419e-05, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "lineno": 70, "outcome": "passed", "keywords": ["test_modulus_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.00011879098019562662, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 6.329102325253189e-05, "outcome": "passed"}, "teardown": {"duration": 6.399999256245792e-05, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_power", "lineno": 74, "outcome": "passed", "keywords": ["test_power", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.00011808398994617164, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 8.212501415982842e-05, "outcome": "passed"}, "teardown": {"duration": 6.349998875521123e-05, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "lineno": 84, "outcome": "passed", "keywords": ["test_square_root", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.00010870798723772168, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 8.354202145710588e-05, "outcome": "passed"}, "teardown": {"duration": 6.254101754166186e-05, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "lineno": 93, "outcome": "passed", "keywords": ["test_square_root_of_negative", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.00010962499072775245, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 5.5791024351492524e-05, "outcome": "passed"}, "teardown": {"duration": 5.9707992477342486e-05, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "lineno": 97, "outcome": "passed", "keywords": ["test_square_root_non_converging", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.00011070800246670842, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if_2']\n"}, "call": {"duration": 5.949998740106821e-05, "outcome": "passed"}, "teardown": {"duration": 6.512500112876296e-05, "outcome": "passed"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}