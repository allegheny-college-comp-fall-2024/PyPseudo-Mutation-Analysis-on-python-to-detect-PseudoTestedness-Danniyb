{"created": 1731090033.312638, "duration": 40.71165204048157, "exitcode": 2, "root": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo", "environment": {}, "summary": {"passed": 3, "failed": 2, "total": 5, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add", "type": "Function", "lineno": 16}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide", "type": "Function", "lineno": 42}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "type": "Function", "lineno": 54}, {"nodeid": "simplePro/test_calculator.py::test_modulus", "type": "Function", "lineno": 58}, {"nodeid": "simplePro/test_calculator.py::test_modulus_by_zero", "type": "Function", "lineno": 70}, {"nodeid": "simplePro/test_calculator.py::test_power", "type": "Function", "lineno": 74}, {"nodeid": "simplePro/test_calculator.py::test_square_root", "type": "Function", "lineno": 84}, {"nodeid": "simplePro/test_calculator.py::test_square_root_of_negative", "type": "Function", "lineno": 93}, {"nodeid": "simplePro/test_calculator.py::test_square_root_non_converging", "type": "Function", "lineno": 97}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add", "lineno": 16, "outcome": "passed", "keywords": ["test_add", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0016062080103438348, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if']\n"}, "call": {"duration": 0.0004532919992925599, "outcome": "passed"}, "teardown": {"duration": 0.00037295800575520843, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.000526666990481317, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if']\n"}, "call": {"duration": 0.00034408298961352557, "outcome": "passed"}, "teardown": {"duration": 0.0003233330062357709, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply", "lineno": 33, "outcome": "failed", "keywords": ["test_multiply", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0005906250007683411, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if']\n"}, "call": {"duration": 0.0007900420023361221, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 39, "message": "assert -9 == 9\n +  where -9 = <bound method Calculator.multiply of <calculator.Calculator object at 0x107995ad0>>(-3, -3)\n +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x107995ad0>> = <calculator.Calculator object at 0x107995ad0>.multiply"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 39, "message": "AssertionError"}], "stdout": "SDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\n", "longrepr": "calculator = <calculator.Calculator object at 0x107995ad0>\n\n    def test_multiply(calculator):\n        assert calculator.multiply(3, 3) == 9\n        assert calculator.multiply(2, 5) == 10\n        assert calculator.multiply(10, 0) == 0\n        assert calculator.multiply(-2, 4) == -8\n>       assert calculator.multiply(-3, -3) == 9\nE       assert -9 == 9\nE        +  where -9 = <bound method Calculator.multiply of <calculator.Calculator object at 0x107995ad0>>(-3, -3)\nE        +    where <bound method Calculator.multiply of <calculator.Calculator object at 0x107995ad0>> = <calculator.Calculator object at 0x107995ad0>.multiply\n\nsimplePro/test_calculator.py:39: AssertionError"}, "teardown": {"duration": 0.0003849159984383732, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide", "lineno": 42, "outcome": "failed", "keywords": ["test_divide", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0006136250012787059, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if']\n"}, "call": {"duration": 0.0008538330002920702, "outcome": "failed", "crash": {"path": "/Users/danielbekele/senior/comp/PyPseudo-Mutation-Analysis-on-python-to-detect-PseudoTestedness-Danniyb/PyPseudo/simplePro/test_calculator.py", "lineno": 47, "message": "assert 5 == -5\n +  where 5 = <bound method Calculator.divide of <calculator.Calculator object at 0x107a34a50>>(-10, 2)\n +    where <bound method Calculator.divide of <calculator.Calculator object at 0x107a34a50>> = <calculator.Calculator object at 0x107a34a50>.divide"}, "traceback": [{"path": "simplePro/test_calculator.py", "lineno": 47, "message": "AssertionError"}], "stdout": "SDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\nSDL: Skipping if statement\n", "longrepr": "calculator = <calculator.Calculator object at 0x107a34a50>\n\n    def test_divide(calculator):\n        assert calculator.divide(10, 2) == 5\n        assert calculator.divide(9, 3) == 3\n        assert calculator.divide(5, 1) == 5\n>       assert calculator.divide(-10, 2) == -5\nE       assert 5 == -5\nE        +  where 5 = <bound method Calculator.divide of <calculator.Calculator object at 0x107a34a50>>(-10, 2)\nE        +    where <bound method Calculator.divide of <calculator.Calculator object at 0x107a34a50>> = <calculator.Calculator object at 0x107a34a50>.divide\n\nsimplePro/test_calculator.py:47: AssertionError"}, "teardown": {"duration": 0.00037354200321715325, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide_by_zero", "lineno": 54, "outcome": "passed", "keywords": ["test_divide_by_zero", "test_calculator.py", "simplePro", "PyPseudo", ""], "setup": {"duration": 0.0006390839989762753, "outcome": "passed", "stdout": "Mutations enabled.\nActive mutations:\n  - Type: sdl, Target: ['if']\n"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}