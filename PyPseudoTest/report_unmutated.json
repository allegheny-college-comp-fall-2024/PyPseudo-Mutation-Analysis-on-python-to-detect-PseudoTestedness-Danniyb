{"created": 1729267166.046418, "duration": 0.15640878677368164, "exitcode": 0, "root": "/Users/danielbekele/senior/comp/PyPseudoTest", "environment": {}, "summary": {"passed": 12, "total": 12, "collected": 12}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "results", "outcome": "passed", "result": []}, {"nodeid": "simplePro/test_calculator.py", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py::test_add[1-2-3]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_add[-1-1-0]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_add[100-50-150]", "type": "Function", "lineno": 17}, {"nodeid": "simplePro/test_calculator.py::test_subtract[5-3-2]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_subtract[10-5-5]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_subtract[0-0-0]", "type": "Function", "lineno": 25}, {"nodeid": "simplePro/test_calculator.py::test_multiply[3-3-9]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_multiply[2-5-10]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_multiply[10-0-0]", "type": "Function", "lineno": 33}, {"nodeid": "simplePro/test_calculator.py::test_divide[10-2-5]", "type": "Function", "lineno": 41}, {"nodeid": "simplePro/test_calculator.py::test_divide[9-3-3]", "type": "Function", "lineno": 41}, {"nodeid": "simplePro/test_calculator.py::test_divide[5-0-None]", "type": "Function", "lineno": 41}]}, {"nodeid": "simplePro", "outcome": "passed", "result": [{"nodeid": "simplePro/test_calculator.py", "type": "Module"}]}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "results", "type": "Dir"}, {"nodeid": "simplePro", "type": "Dir"}]}], "tests": [{"nodeid": "simplePro/test_calculator.py::test_add[1-2-3]", "lineno": 17, "outcome": "passed", "keywords": ["test_add[1-2-3]", "parametrize", "pytestmark", "1-2-3", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0015777090011397377, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.000499708010465838, "outcome": "passed"}, "teardown": {"duration": 0.0006925420020706952, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_add[-1-1-0]", "lineno": 17, "outcome": "passed", "keywords": ["test_add[-1-1-0]", "parametrize", "pytestmark", "-1-1-0", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012440830032574013, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.00046491698594763875, "outcome": "passed"}, "teardown": {"duration": 0.0006199159979587421, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_add[100-50-150]", "lineno": 17, "outcome": "passed", "keywords": ["test_add[100-50-150]", "parametrize", "pytestmark", "100-50-150", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012497920106397942, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.0004964999970979989, "outcome": "passed"}, "teardown": {"duration": 0.0006292919861152768, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[5-3-2]", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract[5-3-2]", "parametrize", "pytestmark", "5-3-2", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012787500018021092, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.00047562499821651727, "outcome": "passed"}, "teardown": {"duration": 0.000608083006227389, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[10-5-5]", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract[10-5-5]", "parametrize", "pytestmark", "10-5-5", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0011892909969901666, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.000458790993434377, "outcome": "passed"}, "teardown": {"duration": 0.0006049999938113615, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_subtract[0-0-0]", "lineno": 25, "outcome": "passed", "keywords": ["test_subtract[0-0-0]", "parametrize", "pytestmark", "0-0-0", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0011869590089190751, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.0004572500038193539, "outcome": "passed"}, "teardown": {"duration": 0.000615167009527795, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[3-3-9]", "lineno": 33, "outcome": "passed", "keywords": ["test_multiply[3-3-9]", "parametrize", "pytestmark", "3-3-9", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0014320830086944625, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.0004935829929308966, "outcome": "passed"}, "teardown": {"duration": 0.0006282079993980005, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[2-5-10]", "lineno": 33, "outcome": "passed", "keywords": ["test_multiply[2-5-10]", "parametrize", "pytestmark", "2-5-10", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0013947909901617095, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.000495375003083609, "outcome": "passed"}, "teardown": {"duration": 0.0006271250022109598, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_multiply[10-0-0]", "lineno": 33, "outcome": "passed", "keywords": ["test_multiply[10-0-0]", "parametrize", "pytestmark", "10-0-0", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012128329981351271, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.0004715830000350252, "outcome": "passed"}, "teardown": {"duration": 0.0006144159997347742, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[10-2-5]", "lineno": 41, "outcome": "passed", "keywords": ["test_divide[10-2-5]", "parametrize", "pytestmark", "10-2-5", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012039589928463101, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.00046624999959021807, "outcome": "passed"}, "teardown": {"duration": 0.0006027499912306666, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[9-3-3]", "lineno": 41, "outcome": "passed", "keywords": ["test_divide[9-3-3]", "parametrize", "pytestmark", "9-3-3", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0011887919972650707, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.000473457999760285, "outcome": "passed"}, "teardown": {"duration": 0.0006054580007912591, "outcome": "passed"}}, {"nodeid": "simplePro/test_calculator.py::test_divide[5-0-None]", "lineno": 41, "outcome": "passed", "keywords": ["test_divide[5-0-None]", "parametrize", "pytestmark", "5-0-None", "test_calculator.py", "simplePro", "PyPseudoTest", ""], "setup": {"duration": 0.0012617909960681573, "outcome": "passed", "stdout": "Mutation is disabled. Running tests without mutation.\nMutations disabled.\n"}, "call": {"duration": 0.0004606249858625233, "outcome": "passed"}, "teardown": {"duration": 0.0006191249995026737, "outcome": "passed"}}], "warnings": [{"message": "currentThread() is deprecated, use current_thread() instead", "category": "DeprecationWarning", "when": "config", "filename": "/Users/danielbekele/.pyenv/versions/3.11.7/lib/python3.11/site-packages/coverage/pytracer.py", "lineno": 223}]}